# Copyright (c) 2021 SolarWinds, LLC.
# All rights reserved.

name: Run tests on different Linux OS

on:
#  push:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GHRC: ghcr.io/appoptics/appoptics-apm-ruby/apm_ruby
  DOCKERFILE: test/run_tests/Dockerfile

jobs:

#-------------------------------------------------------------------------------
  build_images:
    name: Build docker images if necessary
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu, debian, centos, alpine ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: check modified files
        id:   check_files
        run:  echo ::set-output name=renew::`git diff --name-only HEAD^ HEAD | grep Dockerfile`

      - name: ghcr.io login ... build and publish images if needed
        uses: docker/login-action@v1
        if: ${{ steps.check_files.outputs.renew }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish new Docker image
        if: ${{ steps.check_files.outputs.renew }}
        run: |
          docker build -f ${{ env.DOCKERFILE }}_${{ matrix.os }} -t ${{ env.GHRC }}_${{ matrix.os }} .
          docker push ${{ env.GHRC }}_${{ matrix.os }}

#-------------------------------------------------------------------------------
  all_linux_test:
    name: Test on all Linux
    runs-on: ubuntu-latest
    needs: build_images

    strategy:
      fail-fast: false
      matrix:
#        os: [ubuntu, debian, centos, alpine] # TODO enable them all
        os: [ubuntu, alpine]
        ruby: [3.0, 2.7, 2.6, 2.5, 2.4]

    container:
#      can't use env outside of a command, too bad
#      image: ghcr.io/appoptics/appoptics-apm-ruby/${{ env.GHRC }}_${{ matrix.os }}
       image: ghcr.io/appoptics/appoptics-apm-ruby/apm_ruby_${{ matrix.os }}

    name: ${{ matrix.os }} - ${{ matrix.ruby }}

    services:
      memcached:
        image: memcached:latest
        ports:
          - 11211:11211
        options: --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: "--health-cmd \"mongo --quiet --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'\" --health-interval 10s --health-timeout 5s --health-retries 5"
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mariadb:latest
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: travis_ci_test
          MYSQL_ROOT_PASSWORD: admin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: just a shell command
      run: |
        user=`whoami`
        pwd=`pwd`
        echo "I am user: $user, in directory: $pwd"

    - name: ruby tests
      run: |
        test/run_tests/ruby_setup.sh
        version=`rbenv versions | grep ${{ matrix.ruby }}`
        test/run_tests/run_tests.sh -r $version
