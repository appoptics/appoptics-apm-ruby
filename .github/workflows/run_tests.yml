name: Run all Tests

#on: [push, pull_request]
on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
#        ruby: [3.0, 2.7, 2.6, 2.5, 2.4]
        ruby: [2.6]
        gemfile:
          - libraries
#          - unit
#          - instrumentation_mocked
#          - instrumentation_mocked_oldgems
#          - frameworks
#          - rails61
#          - rails60
#          - rails52
#          - rails42
#          - delayed_job
#          - noop
        dbtype: [postgresql, mysql2]
        exclude:
          - ruby: 3.0
            gemfile: rails42
          - ruby: 2.7sequel_mysql2_test.rb:10
            gemfile: rails42
          - ruby: 2.6
            gemfile: rails42
          - ruby: 2.4
            gemfile: rails61
          - ruby: 2.4
            gemfile: rails60
          - ruby: 2.4  # excluding because of new sprockets version (4.0.0)
            gemfile: rails52

          - gemfile: unit
            dbtype: mysql2
          - gemfile: noop
            dbtype: mysql2
          - gemfile: libraries
            dbtype: mysql2
          - gemfile: instrumentation_mocked
            dbtype: mysql2
          - gemfile: instrumentation_mocked_oldgems
            dbtype: mysql2
          - gemfile: frameworks
            dbtype: mysql2
          - gemfile: delayed_job
            dbtype: mysql2

    container:
      image:  ruby:${{ matrix.ruby }}

    name: ${{ matrix.ruby }} - ${{ matrix.gemfile }}

#    name: Test Service Setup
    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}.gemfile
      APPOPTICS_GEM_TEST: true
      APPOPTICS_REPORTER: file
      APPOPTICS_COLLECTOR: /tmp/appoptics_traces.bson
      APPOPTICS_MONGO_SERVER: "mongo"
      APPOPTICS_RABBITMQ_SERVER: "rabbitmq"
      APPOPTICS_REPORTER_FILE_SINGLE: false
      APPOPTICS_FROM_S3: true
#      ImageOS: ubuntu18
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_ROOT_PASSWORD: "admin"
      MYSQL_HOST: "mysql"
      MYSQL_DATABASE: "travis_ci_test"
      POSTGRES_DB: "travis_ci_test"
      DOCKER_MYSQL_PASS: "admin"
      DOCKER_PSQL_PASS: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PSQL_HOST: "postgres"
#      REDIS_HOST: "localhost"
      REDIS_PASSWORD: "redis_pass"
#      APPOPTICS_REDIS_SERVER: "localhost"
    services:
      rabbitmq:
#        image: rabbitmq:3-management
        image: rabbitmq:latest
        ports:
          - 5672:5672
      mongo:
      #        image: mongo:3.4
        image: mongo:latest
        ports:
          - 27017:27017
      postgres:
        image: postgres:10.8
        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#      redis:
#        image: redis
#        env:
#          REDIS_PASSWORD: "redis_pass"
#        ports:
#          - 6379:6379
#        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
      mysql:
        image: mariadb:latest
        env:
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: travis_ci_test
          MYSQL_ROOT_PASSWORD: admin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: apt update && apt install -y --no-install-recommends libcurl4-gnutls-dev libsasl2-dev postgresql-client

#      - name: Set up ${{ matrix.ruby }}
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: ${{ matrix.ruby }}

      - name: Set database type env var
        run: export DBTYPE=${{ matrix.dbtype }}

      - name: Initialize services
        env:
          # use localhost for the host here because if running the job on the VM
          # If we were running the job on in a container the host is postgres
          POSTGRES_HOST: postgres
        #          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        run: |
          export PGPASSWORD=$POSTGRES_PASSWORD; psql -c 'create database travis_ci_test;' -U postgres -h $POSTGRES_HOST
          curl -SL http://download.redis.io/releases/redis-4.0.0.tar.gz | tar xzC /tmp && cd /tmp/redis-4.0.0/ && make && make install && cd -
          redis-server --requirepass redis_pass &
      #          mysql -e 'create database travis_ci_test;'

      - name: Bundle with 1.17.3
        if: matrix.gemfile == 'rails42' || matrix.gemfile == 'frameworks'
        run: |
          gem install bundler:1.17.3
          export BUNDLE_GEMFILE=gemfiles/${{ matrix.gemfile }}.gemfile
          bundle _1.17.3_ install --jobs 4 --retry 3
      - name: Bundle
        if: matrix.gemfile != 'rails42' && matrix.gemfile != 'frameworks'
        run: |
          gem install bundler
          export BUNDLE_GEMFILE=gemfiles/${{ matrix.gemfile }}.gemfile
          bundle install --jobs 4 --retry 3

      - name: Install swig 4.0.2
        run: |
          curl -SL http://kent.dl.sourceforge.net/project/swig/swig/swig-4.0.2/swig-4.0.2.tar.gz | tar xzC /tmp
          cd /tmp/swig-4.0.2
          ./configure && make && make install
          cd -
          rm -rf /tmp/swig-4.0.2

      - name: Compile c-extension
        run: |
          bundle exec rake fetch compile


      - name: Run tests
#        env:
#          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
#          MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}
        run: bundle exec rake test
