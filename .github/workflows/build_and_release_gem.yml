name: RELEASE Ruby Gem to RubyGems

on: [push]
#on:
#  workflow_dispatch:
#    inputs:
#      oboe_version:
#        description: 'Oboe version to use with this gem version'
#        required: true
#        default: 0.0.0

jobs:
  build:
    name: Build + Release Gem to RubyGems
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby 2.6 and bundle
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install gems
        run: |
          echo 'gem: --no-document' >> ~/.gemrc
          bundle install --without development --without test

      - name: Install swig 4.0.2
        run: |
          curl -SL http://kent.dl.sourceforge.net/project/swig/swig/swig-4.0.2/swig-4.0.2.tar.gz | tar xzC /tmp
          cd /tmp/swig-4.0.2
          ./configure && make && sudo make install
          cd -

      - name: Download oboe files from github, compile swig wrapper
        env:
          TRACE_BUILD_TOKEN: ${{ secrets.TRACE_BUILD_RUBY_ACTIONS_API_TOKEN }}
        run: |
          oboe_version=`cat ext/oboe_metal/src/VERSION`
          bundle exec rake oboe_github_fetch[$oboe_version]
          ls -l ext/oboe_metal/verify
          ls -l ext/oboe_metal/verify/bson

      - name: Download files from files.appoptics.com and github, and verify
        run: |
          oboe_version=`cat ext/oboe_metal/src/VERSION`
          bundle exec rake oboe_files_appoptics_fetch[$oboe_version]
          bundle exec rake oboe_verify

      - name: TEMP lets try this build and publish action
          uses: dawidd6/action-publish-gem@v1
          with:
            api_key: ${{secrets.RUBYGEMS_TOKEN}}

      - name: Build Gem and upload to Rubygems
        id: build
        env:
          GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_TOKEN }}
        run:  |
#          gem build appoptics_apm.gemspec
          checksum=`shasum -a256 *.gem | awk '{print $1;}'`
          echo "checksum: $checksum"
          echo ::set-output name=checksum::$checksum
#          gemname=`echo appoptics_apm*.gem`
#          echo "gemname: @$gemname"
#          echo ::set-output name=gem_version::`ruby -e 'require "./lib/appoptics_apm/version"; puts AppOpticsAPM::Version::STRING'`
#          curl -v -H "rubygems_975622645c0838cd055da85b75fafa3294b54a39db464cdb" \
#                  -H "Content-Type:application/octet-stream" \
#                  --data-binary @$gemname https://rubygems.org/api/v1/gems

      - name:  echo gem release and checksum
        run: |
          echo "checksum: ${{ steps.build.outputs.checksum }}"
          echo "gem version: ${{ steps.build.outputs.gem_version }}"

      - name: Create release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.createRelease({
              owner: "appoptics",
              repo: "appoptics-apm-ruby",
              body: "SHA256 checksum: ${{ steps.build.outputs.checksum }}",
              tag_name: "${{ steps.build.outputs.gem_version }}",
              name: "${{ steps.build.outputs.gem_version }}",
              draft: true
            })

      - name: get checksum from Rubygems
        id: checksum
        run: |
          gem_version=${{ steps.build.outputs.gem_version }}
          echo ::set-output name=geminfo::`curl https://rubygems.org/api/v2/rubygems/appoptics_apm/versions/$gem_version.json`

      - name: print checksums
        run: |
          echo "local checksum:    ${{ steps.build.outputs.checksum }}"
          echo "Rubygems checksum: ${{ fromJson(steps.checksum.outputs.geminfo).sha }}"

      - name: fail if local and rubygems checksum not matching
        if: fromJson(steps.checksum.outputs.geminfo).sha != steps.build.outputs.checksum
        run: |
          echo "local and rubygems checksum not matching"
          exit 1

#      - name: Test install
#        TODO test if gem installs

